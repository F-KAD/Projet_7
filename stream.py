# -*- coding: utf-8 -*-
"""stream1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1q40wLrwt_xlnVs4tYfrkWC_I8pxcXiVS
"""

import streamlit as st
from PIL import Image
import requests

def Render():
    st.title("Sentiment Analysis 😍😁😊😐😕🙁😡")
    st.subheader("Analyse de sentiment d'un Tweet")
    st.write("Analyse d'un Tweet donné par l'utilisateur pour associer un sentiment (Positif ou Négatif).")
    User_Tweet = st.text_input("Tweet de l'utilisateur", placeholder = "Inserez le Tweet ici !")
    st.text("")
    modele = st.selectbox("Type de modèle", ("Simple", "Détaillé"))
    st.text("")
    if st.button("Predict"):
        if(User_Tweet != "" and modele != None):
            st.text("")
            st.write("## Résultat :")
            get_sentiments(User_Tweet, modele)

def sentiment_image(sentiment): #Affichage image
    if(sentiment == "Positif"):
        image = Image.open("images/Positif.png")
    elif(sentiment == "Negatif"):
        image = Image.open("images/Negatif.png")
    return image.resize((250,250))

def get_sentiment_API(User_Tweet):
    reponse = requests.get(url = f"https://projet-7.azurewebsites.net/DL?tweet={User_Tweet}")
    reponse_json = reponse.json()
    pred, sentiment, tweet = reponse_json.values()
    return pred, sentiment

def get_sentiments(User_Tweet, modele): #Affichage image
    #Prédiction et le sentiment associé.
    pred, sentiment = get_sentiment_API(User_Tweet)

    if(modele == "Simple"): #Affichage sentiment
        st.write(sentiment)

    elif(modele == "Détaillé"): #Affichage Prédiction et sentiment
        col_1, col_2 = st.columns(2)
        col_1.metric(label = "Prédiction", value = round(pred, 2))
        col_2.metric(label = "Sentiment", value = sentiment)

        #Affichage image
        st.image(sentiment_image(sentiment))

Render()